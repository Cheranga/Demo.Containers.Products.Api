name: "Demo.Containers"
concurrency: "Demo.Containers"
env: 
  APP_NAME: cherademoproductsapi
  RG_NAME: rg-chera-demo
  RG_LOCATION: australiasoutheast
  DOTNET_VERSION: 6.0.x
  PUBLISHED_PATH: ./published

on:

  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    
jobs: 
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore projects
        run: dotnet restore

      - name: Build Projects      
        run: dotnet build --no-restore -c Release 

      - name: Publish Artifacts - Deployment Templates
        uses: actions/upload-artifact@v3
        with:
          name: deploy
          path: ./.github/templates
          if-no-files-found: error

  deploytodev:
    environment: DEV
    name: DEV
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Generate Build Number
        id: generatebuildnumber
        run: |
          echo "BUILD_VERSION=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
      - name: Build Image and Publish
        uses: Cheranga/GitHubActions/buildandpushtodockerhub@master
        with:
          dockerUserName: ${{secrets.DOCKER_USER}}
          dockerPassword: ${{secrets.DOCKER_PASSWORD}}
          dockerFilePath: Demo.Containers.Products.Api/Dockerfile
          imageName: demoproductsapi
          imageTag: ${{ env.BUILD_VERSION }}

      - name: Download Artifact - Templates
        uses: actions/download-artifact@v3
        with:
          name: deploy
          path: deploy

      - name: Login to Azure CLI       
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      # - name: Provision ACI
      #   uses: Azure/aci-deploy@v1
      #   with:
      #     resource-group: ${{ env.RG_NAME }}-dev
      #     dns-name-label: productsapidev
      #     image: ${{ secrets.DOCKER_USER }}/demoproductsapi:${{env.BUILD_VERSION}}
      #     name: ${{ env.APP_NAME }}-dev
      #     command-line: /bin/bash a.sh
      #     secure-environment-variables: DatabaseConfig__ConnectionString=${{ secrets.DATABASECONNECTIONSTRING }}
      #     location: ${{ env.RG_LOCATION }}
      
      - name: Provision ACI
        uses: azure/arm-deploy@v1
        env:
          databaseConnectionString: database connection string
        with:
          failOnStdErr: false
          deploymentName: ACI-${{ env.BUILD_VERSION }}
          resourceGroupName: ${{ env.RG_NAME }}-dev
          template: deploy/aci/template.bicep
          parameters: >            
            name=aci-${{ env.APP_NAME }}-dev            
            dnsName=${{ env.APP_NAME }}-dev
            location=${{ env.RG_LOCATION }}
            image=cheranga/demoproductsapi:${{env.BUILD_VERSION}}
            databaseConnectionString="${{ env.databaseConnectionString }}"

      - name: Logout from Azure CLI     
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout            
           
            