name: "Demo.Containers"
concurrency: "Demo.Containers"
env: 
  APP_NAME: cherademoproductsapi
  RG_NAME: rg-chera-demo
  RG_LOCATION: australiasoutheast
  DOTNET_VERSION: 6.0.x
  PUBLISHED_PATH: ./published
  

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    
jobs: 
  build:
    name: Build and Deploy
    runs-on: windows-latest    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Install .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Restore projects
        run: dotnet restore
      
      - name: Build Projects
        run: dotnet build --no-restore -c Release
      
      - name: Publish
        run: dotnet publish -c Release --no-build -o ${{ env.PUBLISHED_PATH }}/api
        
      - name: Publish Artifact - API
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: ${{ env.PUBLISHED_PATH }}
          
      - name: Publish Artifact - Templates
        uses: actions/upload-artifact@v3
        with:
          name: deploy
          path: ./.github/templates          
          
  deploy-staging:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    
    environment: 
      name: PRE-PROD
      
    steps:
      - name: Login to Azure CLI
        uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Create Resource Group ${{ env.RG_NAME }}
        uses: azure/CLI@v1
        with:
          inlineScript: |
            #!/bin/bash            
            if $(az group exists --name ${{ env.RG_NAME }}) ; then
              echo "Azure resource group already exists, skipping creation..."
            else
              az group create --name ${{ env.RG_NAME }} --location ${{ env.RG_LOCATION }}
              echo "Azure resource group created"
            fi
            
#      - name: Provision Resources 
#        uses: azure/arm-deploy@v1
#        with:
#          failOnStdErr: false
#          deploymentName: ProductsAPI
#          resourceGroupName: ${{ env.RG_NAME }}
#          template: ./.github/templates/main.bicep
#          parameters: >
#            envName=dev
#            apiName=${{ env.APP_NAME }}
#            location=${{ env.RG_LOCATION }}